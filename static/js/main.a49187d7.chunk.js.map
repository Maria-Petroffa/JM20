{"version":3,"sources":["components/style.js","components/InputItem.js","components/password.js","components/acceptTerms.js","components/submit.js","components/validateForm.js","components/App.js","components/skillsList.js","service/service.js","index.js"],"names":["Form","styled","form","FormItem","div","Label","label","ErrorMessage","InputItem","this","props","id","labelName","onChange","value","type","htmlFor","placeholder","name","style","width","height","React","Component","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","AcceptTerms","Submit","BasicFormSchema","Yup","shape","email","required","max","password","min","matches","age","website","url","repeatPassword","oneOf","acceptTerms","SignupForm","handleChange","setFieldValue","formik","useFormik","initialValues","skills","onSubmit","values","axios","post","then","response","data","alert","request","validationSchema","handleSubmit","touched","errors","List","fields","add","remove","Item","className","key","noStyle","map","field","MinusCircleOutlined","margin","onClick","e","i","length","PlusOutlined","checked","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.a49187d7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n    width: 500px;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 50px;\n`;\nexport const FormItem = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nmargin-top: 10px;\n`;\nexport const Label = styled.label`\nwidth: 100%;\nmargin-right: 10px;\n\nfont-weight: 600;\n`;\n\nexport const ErrorMessage = styled.div`\ncolor: red;\nmargin-top: 10px;\nmargin-bottom: 10px;\nalign-self: center;\n\nfont-weight: 600;\n`;\n","import React from 'react';\n\nimport { Input } from 'antd';\n\nimport { FormItem, Label } from './style';\n\nexport class InputItem extends React.Component {\n  render() {\n    const {\n      id, labelName, onChange, value, type,\n    } = this.props;\n\n    return (\n      <FormItem>\n        <Label htmlFor={id}>{labelName}</Label>\n        <Input\n          placeholder={labelName}\n          id={id}\n          name={id}\n          type={type}\n          onChange={onChange}\n          value={value}\n          style={{ width: '90%', height: 30 }}\n        />\n      </FormItem>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Input } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\n\nimport { FormItem, Label } from './style';\n\nexport class Password extends React.Component {\n  render() {\n    const {\n      id, labelName, onChange, value,\n    } = this.props;\n\n    return (\n      <FormItem>\n        <Label htmlFor={id}>{labelName}</Label>\n        <Input.Password\n          placeholder={labelName}\n          id={id}\n          name={id}\n          type=\"text\"\n          onChange={onChange}\n          value={value}\n          style={{ width: '100%', height: 30 }}\n          iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n        />\n      </FormItem>\n    );\n  }\n}\n","import React from 'react';\nimport { FormItem, Label } from './style';\n\nexport class AcceptTerms extends React.Component {\n  render() {\n    const { id, labelName, onChange } = this.props;\n    return (\n      <FormItem>\n        <label htmlFor={id}>{labelName}</label>\n        <input type=\"checkbox\" onChange={onChange} id={id} name={id} />\n      </FormItem>\n    );\n  }\n}\n","import React from 'react';\n\nimport { FormItem } from './style';\n\nexport class Submit extends React.Component {\n  render() {\n    const { labelName } = this.props;\n\n    return (\n      <FormItem>\n        <button type=\"submit\">{labelName}</button>\n      </FormItem>\n    );\n  }\n}\n","import * as Yup from 'yup';\n\nexport const BasicFormSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Введите верный адрес')\n    .required('Email обязательно для заполнения'),\n  name: Yup.string()\n    .max(50, 'Не более 50 символов')\n    .required('Name обязательно для заполнения'),\n  password: Yup.string()\n    .min(8, 'Длина не менее 8 символов')\n    .max(40, 'Длина не более 4 символов')\n    .matches(\n      /[a-z]*[0-9]+[A-Z]+/,\n      'Используйте только буквы латинского алфавита и цифры, как минимум одна цифра и одна заглавная буква',\n    )\n    .required('Password обязательно для заполнения'),\n  age: Yup.number()\n    .min(18, 'от 18')\n    .max(65, 'до 65')\n    .required('Age обязательно для заполнения'),\n  website: Yup.string().url('введите верный адрес'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать')\n    .required('Repeat Password обязательно для заполнения'),\n  acceptTerms: Yup.string().required('Необходимо согласиться с условиями'),\n});\n","import React from 'react';\n\nimport { useFormik } from 'formik';\n\nimport { InputItem } from './InputItem';\nimport { Password } from './password';\nimport { SkillsList } from './skillsList';\nimport { AcceptTerms } from './acceptTerms';\nimport { Submit } from './submit';\nimport { Form, ErrorMessage } from './style';\nimport { BasicFormSchema } from './validateForm';\n\nimport { request } from '../service/service';\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      password: '',\n      repeatPassword: '',\n      email: '',\n      website: '',\n      age: '',\n      skills: [],\n      acceptTerms: '',\n    },\n    onSubmit: (values) => request(values),\n    validationSchema: BasicFormSchema,\n  });\n\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n        <InputItem\n          id=\"name\"\n          labelName=\"Name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          type=\"text\"\n        />\n        {formik.touched.name && formik.errors.name ? (\n          <ErrorMessage>{formik.errors.name}</ErrorMessage>\n        ) : null}\n        <Password\n          id=\"password\"\n          labelName=\"Password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <ErrorMessage>{formik.errors.password}</ErrorMessage>\n        ) : null}\n        <Password\n          id=\"repeatPassword\"\n          labelName=\"Repeat Password\"\n          onChange={formik.handleChange}\n          value={formik.values.repeatPassword}\n        />\n        {formik.touched.repeatPassword && formik.errors.repeatPassword ? (\n          <ErrorMessage>{formik.errors.repeatPassword}</ErrorMessage>\n        ) : null}\n        <InputItem\n          id=\"email\"\n          labelName=\"Email Address\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          type=\"email\"\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        ) : null}\n        <InputItem\n          id=\"website\"\n          labelName=\"Website\"\n          onChange={formik.handleChange}\n          value={formik.values.website}\n          type=\"text\"\n        />\n        {formik.touched.website && formik.errors.website ? (\n          <ErrorMessage>{formik.errors.website}</ErrorMessage>\n        ) : null}\n        <InputItem\n          id=\"age\"\n          labelName=\"Age\"\n          onChange={formik.handleChange}\n          value={formik.values.age}\n          type=\"text\"\n        />\n        {formik.touched.age && formik.errors.age ? (\n          <ErrorMessage>{formik.errors.age}</ErrorMessage>\n        ) : null}\n        {SkillsList(\n          formik.handleChange,\n          formik.values.skills,\n          formik.setFieldValue,\n        )}\n        <AcceptTerms\n          id=\"acceptTerms\"\n          labelName=\"Accept Terms\"\n          onChange={formik.handleChange}\n          checked={formik.values.acceptTerms}\n        />\n        {formik.touched.acceptTerms && formik.errors.acceptTerms ? (\n          <ErrorMessage>{formik.errors.acceptTerms}</ErrorMessage>\n        ) : null}\n        <Submit labelName=\"Submit\" />\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","import React from 'react';\n\nimport { Input, Button, Form } from 'antd';\n\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nexport const SkillsList = (handleChange, value, setFieldValue) => (\n  <Form name=\"dynamic_form_item\">\n    <Form.List name=\"names\">\n      {(fields, { add, remove }) => (\n        <div>\n          <Form.Item className=\"label\" label=\"Skills\" required={false} key={0} style={{ width: '90%' }}>\n            <Form.Item noStyle>\n              <Input\n                onChange={handleChange}\n                name=\"skills[0]\"\n                placeholder=\"Skill\"\n                style={{ width: '100%' }}\n              />\n            </Form.Item>\n          </Form.Item>\n          {fields.map((field) => (\n            <Form.Item {...field} noStyle key={field.name}>\n              <Input\n                onChange={handleChange}\n                name={`skills[${field.name + 1}]`}\n                placeholder=\"Skill\"\n                style={{ width: '90%' }}\n              />\n              <MinusCircleOutlined\n                className=\"dynamic-delete-button\"\n                style={{ margin: '0 8px' }}\n                onClick={(e) => {\n                  for (let i = field.name + 1; i < value.length; i += 1) {\n                    setFieldValue(`skills[${i}]`, value[i + 1]);\n                  }\n                  remove(field.name);\n                }}\n              />\n            </Form.Item>\n          ))}\n          <Form.Item>\n            <Button\n              type=\"dashed\"\n              onClick={(e) => {\n                add();\n              }}\n              style={{ width: '90%' }}\n            >\n              <PlusOutlined />\n              {' '}\n              Add Skill\n            </Button>\n          </Form.Item>\n        </div>\n      )}\n    </Form.List>\n  </Form>\n);\n","import axios from 'axios';\n\nexport const request = (values) => {\n  axios.post('http://localhost:5000/sign-up', values).then((response) => {\n    response.data === 'error'\n      ? alert('Этот адрес уже занят')\n      : alert('Регистрация прошла успешно');\n  });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'reset-css';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}